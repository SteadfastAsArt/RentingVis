<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rentingvis.mapper.PoiHzMapper" >
  <!-- resultMap -->
  <resultMap id="BaseResultMap" type="com.rentingvis.po.PoiHz" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="std_tag" property="stdTag" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="DOUBLE" />
    <result column="lon" property="lon" jdbcType="DOUBLE" />
    <result column="geom" property="geom" jdbcType="OTHER" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, address, alias, area_name, name, std_tag, tel, lat, lon, geom
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rentingvis.po.PoiHzExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from poi_hz
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from poi_hz
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from poi_hz
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.rentingvis.po.PoiHzExample" >
    delete from poi_hz
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rentingvis.po.PoiHz" >
    insert into poi_hz (id, address, alias, 
      area_name, name, std_tag, 
      tel, lat, lon, geom
      )
    values (#{id,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{areaName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{stdTag,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{lat,jdbcType=DOUBLE}, #{lon,jdbcType=DOUBLE}, #{geom,jdbcType=OTHER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rentingvis.po.PoiHz" >
    insert into poi_hz
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="areaName != null" >
        area_name,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="stdTag != null" >
        std_tag,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="lon != null" >
        lon,
      </if>
      <if test="geom != null" >
        geom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="stdTag != null" >
        #{stdTag,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null" >
        #{lon,jdbcType=DOUBLE},
      </if>
      <if test="geom != null" >
        #{geom,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rentingvis.po.PoiHzExample" resultType="java.lang.Integer" >
    select count(*) from poi_hz
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update poi_hz
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null" >
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.areaName != null" >
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.stdTag != null" >
        std_tag = #{record.stdTag,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.lon != null" >
        lon = #{record.lon,jdbcType=DOUBLE},
      </if>
      <if test="record.geom != null" >
        geom = #{record.geom,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update poi_hz
    set id = #{record.id,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      area_name = #{record.areaName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      std_tag = #{record.stdTag,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=DOUBLE},
      lon = #{record.lon,jdbcType=DOUBLE},
      geom = #{record.geom,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rentingvis.po.PoiHz" >
    update poi_hz
    <set >
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="stdTag != null" >
        std_tag = #{stdTag,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null" >
        lon = #{lon,jdbcType=DOUBLE},
      </if>
      <if test="geom != null" >
        geom = #{geom,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rentingvis.po.PoiHz" >
    update poi_hz
    set address = #{address,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      std_tag = #{stdTag,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=DOUBLE},
      lon = #{lon,jdbcType=DOUBLE},
      geom = #{geom,jdbcType=OTHER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="poiRangeQuery" resultMap="BaseResultMap">
    select *
    from poi_hz
    where st_dwithin( geom,
                      st_setsrid( st_makepoint( #{co_x, jdbcType=DOUBLE}, #{co_y, jdbcType=DOUBLE} ), 4326 ),
                      500, true) and
    <foreach collection="list" item="itm" open="(" separator=" or "  close=")">
      std_tag LIKE #{itm}
    </foreach>

  </select>

</mapper>